import React, { useEffect, useState } from 'react';
import { useUser } from '../context/user.context'; // Import the custom hook
import axios from '../config/axios';
import { useNavigate } from 'react-router-dom';

const Home = () => {
  const { user } = useUser(); // Use the custom hook
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [projectName, setProjectName] = useState(null);
  const [project, setProject] = useState([]);

  const navigate = useNavigate();

  const createProject = (e) => {
    e.preventDefault();
    axios.post('projects/create', { name: projectName })
      .then((res) => {
        setIsModalOpen(false);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  useEffect(() => {
    axios.get('/projects/all')
      .then((res) => {
        setProject(res.data.projects);
      })
      .catch((err) => {
        console.log(err);
      });
  }, []);

  return (
    <>
      {/* Navbar */}
      <nav className="bg-white shadow-md dark:bg-gray-900">
        <div className="container mx-auto px-4 py-3 flex justify-between items-center">
          {/* Logo */}
          <a href="/" className="text-xl font-bold text-blue-600 dark:text-white">MyApp</a>

          {/* Navigation Links */}
          <div className="hidden md:flex space-x-6">
            <a href="/" className="text-gray-700 dark:text-gray-200 hover:text-blue-600">Home</a>
            <a href="/about" className="text-gray-700 dark:text-gray-200 hover:text-blue-600">About</a>
            <a href="/contact" className="text-gray-700 dark:text-gray-200 hover:text-blue-600">Contact</a>
          </div>

          {/* Sign Up & Login Buttons */}
          <div className="space-x-4">
            <button 
              className="px-4 py-2 border border-blue-600 text-blue-600 rounded-md hover:bg-blue-600 hover:text-white transition"
              onClick={() => navigate('/signup')}
            >
              Sign Up
            </button>
            <button 
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition"
              onClick={() => navigate('/login')}
            >
              Login
            </button>
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <main className="p-4">
        <div className="projects flex flex-wrap gap-3 items-center">
          <button 
            className="project py-3 px-4 border border-slate-300 rounded-md h-fit transition hover:bg-gray-100 dark:hover:bg-gray-800"
            onClick={() => setIsModalOpen(true)}
          >
            New Project <i className="ri-link ml-2"></i>
          </button>

          {project.map((project) => (
            <div
              key={project._id}
              onClick={() => navigate(`/project/${project._id}`, { state: { project } })}
              className="project py-3 cursor-pointer px-4 border border-slate-300 rounded-md 
              transition duration-300 hover:bg-gray-100 dark:hover:bg-gray-800"
            >
              <h3 className="text-lg font-bold">{project.name}</h3>
              <p className="mt-1 font-medium"><small><i className="ri-group-line mr-1"></i> Collaborators : {project.users.length}</small></p>
            </div>
          ))}
        </div>

        {/* Modal for Creating Project */}
        {isModalOpen && (
          <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
            <div className="bg-white p-6 rounded-md shadow-md w-1/3">
              <h2 className="text-xl mb-4">Create New Project</h2>
              <form onSubmit={createProject}>
                <div className="mb-4">
                  <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="projectName">
                    Project Name
                  </label>
                  <input
                    onChange={(e) => setProjectName(e.target.value)}
                    value={projectName}
                    type="text"
                    id="projectName"
                    name="projectName"
                    className="border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:ring-2 focus:ring-blue-500 outline-none"
                    required
                  />
                </div>
                <div className="flex items-center justify-between">
                  <button
                    type="submit"
                    className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                  >
                    Create
                  </button>
                  <button
                    type="button"
                    className="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    onClick={() => setIsModalOpen(false)}
                  >
                    Cancel
                  </button>
                </div>
              </form>
            </div>
          </div>
        )}
      </main>
    </>
  );
};

export default Home;


import React, { useEffect, useState } from 'react'
import { useUser } from '../context/user.context'; // Import the custom hook
import axios from '../config/axios';
import { useNavigate } from 'react-router-dom';

const Home = () => {

  const { user } = useUser(); // Use the custom hook
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [projectName, setProjectName] = useState(null);
  const [project, setProject] = useState([]);

  const navigate = useNavigate();

  const createProject = (e) => {
    e.preventDefault();
    //console.log({ projectName });
    axios.post('projects/create', { name: projectName })
      .then((res) => {
        //console.log(res);
        setIsModalOpen(false);
      })
      .catch((err) => {
        console.log(err);
      });
  }

  useEffect(() => {
    axios.get('/projects/all')
      .then((res) => {
        //console.log(res.data.projects)
        setProject(res.data.projects);
      })
      .catch((err) => {
        console.log(err);
      });
  }, [])

  return (
    <main className="p-4">
      <div className="projects flex flex-wrap gap-3 items-center">
        <button className="project py-3 px-4 border border-slate-300 rounded-md h-fit" onClick={() => setIsModalOpen(true)}>
          New Project<i className="ri-link ml-2"></i>
        </button>
        {project.map((project) => (
          <div
            key={project._id}
            onClick={() => { navigate(`/project/${project._id}`, { state: { project } }) }}
            className="project py-3 cursor-pointer px-4 border border-slate-300 rounded-md 
               transition duration-300 hover:bg-gray-100 dark:hover:bg-gray-800"
          >
            <h3 className="text-lg font-bold">{project.name}</h3>
            <p className="mt-1 font-medium"><small><i className="ri-group-line mr-1"></i> Collaborators : {project.users.length}</small></p>
          </div>
        ))}
      </div>
      {isModalOpen && (
        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
          <div className="bg-white p-6 rounded-md shadow-md w-1/3">
            <h2 className="text-xl mb-4">Create New Project</h2>
            <form onSubmit={createProject}>
              <div className="mb-4">
                <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="projectName">
                  Project Name
                </label>
                <input
                  onChange={(e) => setProjectName(e.target.value)}
                  value={projectName}
                  type="text"
                  id="projectName"
                  name="projectName"
                  className="border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:ring-2 focus:ring-blue-500 outline-none"
                  required
                />
              </div>
              <div className="flex items-center justify-between">
                <button
                  type="submit"
                  className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                >
                  Create
                </button>
                <button
                  type="button"
                  className="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                  onClick={() => setIsModalOpen(false)}
                >
                  Cancel
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </main>
  )
}

export default Home
